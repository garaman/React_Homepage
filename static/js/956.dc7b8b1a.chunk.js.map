{"version":3,"file":"static/js/956.dc7b8b1a.chunk.js","mappings":"iKAEA,MASA,GATYA,EAAAA,EAAAA,MAAKC,IAAkB,IAAjB,QAAEC,GAASD,EAC3B,OACEE,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAMF,EAAQI,OACdD,EAAAA,EAAAA,KAAA,OAAAD,SAAMF,EAAQK,cCFdC,EAAaA,KACjB,MAAMC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,MAAMC,EAASH,EAAWI,OAAOC,KAAKC,MAAMD,KAAKE,UAAY,EAAIL,IAAK,GAAG,GACzED,EAAMO,KAAKL,EACb,CACA,OAAOF,GAwFT,EArFuBQ,KACrB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAASb,MAC9Bc,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5Bd,EAAQiB,IAAaH,EAAAA,EAAAA,UAAS,KAC9BI,EAAOC,IAAYL,EAAAA,EAAAA,UAAS,IAC7BM,GAAUC,EAAAA,EAAAA,QAAO,MAEjBC,GAAeC,EAAAA,EAAAA,aAClBC,IAEC,GADAA,EAAEC,iBACEV,IAAUH,EAAOc,KAAK,IACxBP,EAAUQ,GAAM,IACXA,EACH,CACE5B,IAAKgB,EACLf,OAAQ,mBAGZiB,EAAU,iBACVW,MAAM,mGACNZ,EAAS,IACTH,EAAUZ,KACVkB,EAAS,IACTC,EAAQS,QAAQC,YACX,CACL,MAAMC,EAAchB,EAAMiB,MAAM,IAAIC,IAAKC,GAAMC,SAASD,IACxD,IAAIE,EAAS,EACTC,EAAO,EACX,GAAInB,EAAMoB,QAAU,EAClBrB,EAAU,uEAADsB,OAAsB3B,EAAOc,KAAK,KAAI,8BAC/CE,MAAM,+GACNZ,EAAS,IACTH,EAAUZ,KACVkB,EAAS,IACTC,EAAQS,QAAQC,YACX,CACL,IAAK,IAAI1B,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACtB2B,EAAY3B,KAAOQ,EAAOR,GAC5BgC,GAAU,EACDxB,EAAO4B,SAAST,EAAY3B,MACrCiC,GAAQ,GAGZlB,EAAUQ,GAAM,IACXA,EACH,CACE5B,IAAKgB,EACLf,OAAO,GAADuC,OAAKH,EAAM,qCAAAG,OAAWF,EAAI,iCAGpCrB,EAAS,IACTI,EAAQS,QAAQC,OAClB,CACF,GAEF,CAACf,EAAOH,EAAQM,EAAMoB,SAGlBG,GAAgBlB,EAAAA,EAAAA,aAAaC,GAAMR,EAASQ,EAAEkB,OAAO3B,OAAQ,IAEnE,OACEnB,EAAAA,EAAAA,MAAA,OAAK+C,UAAU,4BAA2B9C,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAK6C,UAAU,yBAAwB9C,SAAEG,KACzCJ,EAAAA,EAAAA,MAAA,QAAMgD,SAAUtB,EAAazB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACE+C,IAAKzB,EACL0B,UAAW,EACX/B,MAAOA,EACPgC,SAAUN,EACVE,UAAU,wBACVK,YAAY,4BACZC,WAAS,KAEXnD,EAAAA,EAAAA,KAAA,UAAQ6C,UAAU,yBAAwB9C,SAAC,sBAE7CD,EAAAA,EAAAA,MAAA,OAAK+C,UAAU,8BAA6B9C,SAAA,CAAC,iBAAKqB,EAAMoB,WACxDxC,EAAAA,EAAAA,KAAA,MAAI6C,UAAU,6BAA4B9C,SACvCqB,EAAMe,IAAI,CAACC,EAAG9B,KACbN,EAAAA,EAAAA,KAACoD,EAAG,CAAiCvD,QAASuC,GAAE,GAAAK,OAAnCnC,EAAI,EAAC,0BAAAmC,OAAUL,EAAEnC,Y","sources":["components/numberBaseBall/Try.jsx","components/numberBaseBall/NumberBaseball.jsx"],"sourcesContent":["import React, { memo } from 'react';\n\nconst Try = memo(({ tryInfo }) => {\n  return (\n    <li>\n      <div>{tryInfo.try}</div>\n      <div>{tryInfo.result}</div>\n    </li>\n  );\n});\n\nexport default Try;\n","import React, { useRef, useState, useCallback } from 'react';\nimport Try from './Try';\nimport './NumberBaseball.css';\n\nconst getNumbers = () => {\n  const candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const array = [];\n  for (let i = 0; i < 4; i += 1) {\n    const chosen = candidates.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n    array.push(chosen);\n  }\n  return array;\n};\n\nconst NumberBaseball = () => {\n  const [answer, setAnswer] = useState(getNumbers());\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const [tries, setTries] = useState([]);\n  const inputEl = useRef(null);\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (value === answer.join('')) {\n        setTries((t) => [\n          ...t,\n          {\n            try: value,\n            result: '홈런!',\n          },\n        ]);\n        setResult('홈런!');\n        alert('홈런입니다! 게임을 다시 실행합니다.');\n        setValue('');\n        setAnswer(getNumbers());\n        setTries([]);\n        inputEl.current.focus();\n      } else {\n        const answerArray = value.split('').map((v) => parseInt(v));\n        let strike = 0;\n        let ball = 0;\n        if (tries.length >= 9) {\n          setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(',')}였습니다!`); // state set은 비동기\n          alert('실패하였습니다. 게임을 다시 시작합니다.');\n          setValue('');\n          setAnswer(getNumbers());\n          setTries([]);\n          inputEl.current.focus();\n        } else {\n          for (let i = 0; i < 4; i += 1) {\n            if (answerArray[i] === answer[i]) {\n              strike += 1;\n            } else if (answer.includes(answerArray[i])) {\n              ball += 1;\n            }\n          }\n          setTries((t) => [\n            ...t,\n            {\n              try: value,\n              result: `${strike} 스트라이크, ${ball} 볼입니다.`,\n            },\n          ]);\n          setValue('');\n          inputEl.current.focus();\n        }\n      }\n    },\n    [value, answer, tries.length],\n  );\n\n  const onChangeInput = useCallback((e) => setValue(e.target.value), []);\n\n  return (\n    <div className=\"number-baseball-container\">\n      <div className=\"number-baseball-result\">{result}</div>\n      <form onSubmit={onSubmitForm}>\n        <input\n          ref={inputEl}\n          maxLength={4}\n          value={value}\n          onChange={onChangeInput}\n          className=\"number-baseball-input\"\n          placeholder=\"정답 입력\"\n          autoFocus\n        />\n        <button className=\"number-baseball-button\">입력!</button>\n      </form>\n      <div className=\"number-baseball-tries-count\">시도: {tries.length}</div>\n      <ul className=\"number-baseball-tries-list\">\n        {tries.map((v, i) => (\n          <Try key={`${i + 1}차 시도 : ${v.try}`} tryInfo={v} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NumberBaseball;\n"],"names":["memo","_ref","tryInfo","_jsxs","children","_jsx","try","result","getNumbers","candidates","array","i","chosen","splice","Math","floor","random","push","NumberBaseball","answer","setAnswer","useState","value","setValue","setResult","tries","setTries","inputEl","useRef","onSubmitForm","useCallback","e","preventDefault","join","t","alert","current","focus","answerArray","split","map","v","parseInt","strike","ball","length","concat","includes","onChangeInput","target","className","onSubmit","ref","maxLength","onChange","placeholder","autoFocus","Try"],"sourceRoot":""}