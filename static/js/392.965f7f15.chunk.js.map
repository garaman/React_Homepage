{"version":3,"file":"static/js/392.965f7f15.chunk.js","mappings":"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","sources":["components/mineSearch/Td.jsx","components/mineSearch/Tr.jsx","components/mineSearch/Table.jsx","components/mineSearch/Form.jsx","components/mineSearch/MineSearch.jsx"],"sourcesContent":["import React, { useContext, useCallback, memo } from 'react';\nimport {\n  CLICK_MINE,\n  CODE,\n  FLAG_CELL,\n  NORMALIZE_CELL,\n  OPEN_CELL,\n  QUESTION_CELL,\n  TableContext,\n} from './MineSearch';\n\nconst getTdStyle = (code) => {\n  switch (code) {\n    case CODE.NORMAL:\n    case CODE.MINE:\n      return {\n        background: '#a0a0a0',\n      };\n    case CODE.CLICKED_MINE:\n    case CODE.OPENED:\n      return {\n        background: '#e0e0e0',\n      };\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return {\n        background: '#fff59d',\n      };\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return {\n        background: '#ef9a9a',\n      };\n    default:\n      return {\n        background: '#e0e0e0',\n      };\n  }\n};\n\nconst getTdText = (code) => {\n  switch (code) {\n    case CODE.NORMAL:\n      return '';\n    case CODE.MINE:\n      return 'X';\n    case CODE.CLICKED_MINE:\n      return '펑';\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return '!';\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return '?';\n    default:\n      return code || '';\n  }\n};\n\nconst Td = memo(({ rowIndex, cellIndex }) => {\n  const { tableData, dispatch, halted } = useContext(TableContext);\n  const cellData = tableData[rowIndex][cellIndex];\n\n  const onClickTd = useCallback(() => {\n    if (halted) {\n      return;\n    }\n    switch (cellData) {\n      case CODE.OPENED:\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        return;\n      case CODE.NORMAL:\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.MINE:\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [halted, cellData, dispatch, rowIndex, cellIndex]);\n\n  const onRightClickTd = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (halted) {\n        return;\n      }\n      switch (cellData) {\n        case CODE.NORMAL:\n        case CODE.MINE:\n          dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\n          return;\n        case CODE.FLAG_MINE:\n        case CODE.FLAG:\n          dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\n          return;\n        case CODE.QUESTION_MINE:\n        case CODE.QUESTION:\n          dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\n          return;\n        default:\n          return;\n      }\n    },\n    [halted, cellData, dispatch, rowIndex, cellIndex],\n  );\n\n  return (\n    <RealTd\n      onClickTd={onClickTd}\n      onRightClickTd={onRightClickTd}\n      data={cellData}\n    />\n  );\n});\n\nconst RealTd = memo(({ onClickTd, onRightClickTd, data }) => {\n  return (\n    <td\n      style={getTdStyle(data)}\n      onClick={onClickTd}\n      onContextMenu={onRightClickTd}\n    >\n      {getTdText(data)}\n    </td>\n  );\n});\n\nexport default Td;\n","import React, { useContext, memo } from 'react';\nimport Td from './Td';\nimport { TableContext } from './MineSearch';\n\nconst Tr = memo(({ rowIndex }) => {\n  const { tableData } = useContext(TableContext);\n\n  return (\n    <tr>\n      {tableData[0] &&\n        Array(tableData[0].length)\n          .fill()\n          .map((td, i) => <Td rowIndex={rowIndex} cellIndex={i} />)}\n    </tr>\n  );\n});\n\nexport default Tr;\n","import React, { useContext, memo } from 'react';\nimport Tr from './Tr';\nimport { TableContext } from './MineSearch';\n\nconst Table = memo(() => {\n  const { tableData } = useContext(TableContext);\n  return (\n    <table>\n      {Array(tableData.length)\n        .fill()\n        .map((tr, i) => (\n          <Tr rowIndex={i} />\n        ))}\n    </table>\n  );\n});\n\nexport default Table;\n","import React, { useState, useCallback, useContext } from 'react';\nimport { TableContext, START_GAME } from './MineSearch';\n\nconst Form = () => {\n  const [row, setRow] = useState(10);\n  const [cell, setCell] = useState(10);\n  const [mine, setMine] = useState(20);\n  const { dispatch } = useContext(TableContext);\n\n  const onChangeRow = useCallback((e) => {\n    setRow(e.target.value);\n  }, []);\n\n  const onChangeCell = useCallback((e) => {\n    setCell(e.target.value);\n  }, []);\n\n  const onChangeMine = useCallback((e) => {\n    setMine(e.target.value);\n  }, []);\n\n  const onClickBtn = useCallback(() => {\n    dispatch({ type: START_GAME, row, cell, mine });\n  }, [dispatch, row, cell, mine]);\n\n  return (\n    <div className=\"mine-search-form\">\n      <div className=\"input-group\">\n        <label htmlFor=\"row-input\">세로:</label>\n        <input\n          id=\"row-input\"\n          type=\"number\"\n          value={row}\n          onChange={onChangeRow}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"cell-input\">가로:</label>\n        <input\n          id=\"cell-input\"\n          type=\"number\"\n          value={cell}\n          onChange={onChangeCell}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"mine-input\">지뢰:</label>\n        <input\n          id=\"mine-input\"\n          type=\"number\"\n          value={mine}\n          onChange={onChangeMine}\n        />\n      </div>\n      <button onClick={onClickBtn}>시작</button>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useReducer, createContext, useMemo } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport './MineSearch.css';\n\nexport const CODE = {\n  MINE: -7,\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  CLICKED_MINE: -6,\n  OPENED: 0, // 0 이상이면 다 opened\n};\n\nexport const TableContext = createContext({\n  tableData: [],\n  halted: true,\n  dispatch: () => {},\n});\n\nconst initialState = {\n  tableData: [],\n  data: {\n    row: 0,\n    cell: 0,\n    mine: 0,\n  },\n  timer: 0,\n  result: '',\n  halted: true,\n  openedCount: 0,\n};\n\nconst plantMine = (row, cell, mine) => {\n  const candidate = Array(row * cell)\n    .fill()\n    .map((arr, i) => {\n      return i;\n    });\n  const shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    const chosen = candidate.splice(\n      Math.floor(Math.random() * candidate.length),\n      1,\n    )[0];\n    shuffle.push(chosen);\n  }\n  const data = [];\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    data.push(rowData);\n    for (let j = 0; j < cell; j++) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  for (let k = 0; k < shuffle.length; k++) {\n    const ver = Math.floor(shuffle[k] / cell);\n    const hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n\n  return data;\n};\n\nexport const START_GAME = 'START_GAME';\nexport const OPEN_CELL = 'OPEN_CELL';\nexport const CLICK_MINE = 'CLICK_MINE';\nexport const FLAG_CELL = 'FLAG_CELL';\nexport const QUESTION_CELL = 'QUESTION_CELL';\nexport const NORMALIZE_CELL = 'NORMALIZE_CELL';\nexport const INCREMENT_TIMER = 'INCREMENT_TIMER';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return {\n        ...state,\n        data: {\n          row: action.row,\n          cell: action.cell,\n          mine: action.mine,\n        },\n        openedCount: 0,\n        tableData: plantMine(action.row, action.cell, action.mine),\n        halted: false,\n        timer: 0,\n        result: '',\n      };\n    case OPEN_CELL: {\n      const tableData = [...state.tableData];\n      tableData.forEach((row, i) => {\n        tableData[i] = [...row];\n      });\n      const checked = [];\n      let openedCount = 0;\n      const checkAround = (row, cell) => {\n        if (\n          row < 0 ||\n          row >= tableData.length ||\n          cell < 0 ||\n          cell >= tableData[0].length\n        ) {\n          return;\n        } // 상하좌우 없는칸은 안 열기\n        if (\n          [\n            CODE.OPENED,\n            CODE.FLAG,\n            CODE.FLAG_MINE,\n            CODE.QUESTION_MINE,\n            CODE.QUESTION,\n          ].includes(tableData[row][cell])\n        ) {\n          return;\n        } // 닫힌 칸만 열기\n        if (checked.includes(row + '/' + cell)) {\n          return;\n        } else {\n          checked.push(row + '/' + cell);\n        } // 한 번 연칸은 무시하기\n        let around = [tableData[row][cell - 1], tableData[row][cell + 1]];\n        if (tableData[row - 1]) {\n          around = around.concat([\n            tableData[row - 1][cell - 1],\n            tableData[row - 1][cell],\n            tableData[row - 1][cell + 1],\n          ]);\n        }\n        if (tableData[row + 1]) {\n          around = around.concat([\n            tableData[row + 1][cell - 1],\n            tableData[row + 1][cell],\n            tableData[row + 1][cell + 1],\n          ]);\n        }\n        const count = around.filter(function (v) {\n          return [CODE.MINE, CODE.FLAG_MINE, CODE.QUESTION_MINE].includes(v);\n        }).length;\n        if (count === 0) {\n          // 주변칸 오픈\n          const near = [];\n          if (row - 1 > -1) {\n            near.push([row - 1, cell - 1]);\n            near.push([row - 1, cell]);\n            near.push([row - 1, cell + 1]);\n          }\n          near.push([row, cell - 1]);\n          near.push([row, cell + 1]);\n          if (row + 1 < tableData.length) {\n            near.push([row + 1, cell - 1]);\n            near.push([row + 1, cell]);\n            near.push([row + 1, cell + 1]);\n          }\n          near.forEach((n) => {\n            if (tableData[n[0]][n[1]] !== CODE.OPENED) {\n              checkAround(n[0], n[1]);\n            }\n          });\n        }\n        if (tableData[row][cell] === CODE.NORMAL) {\n          // 내 칸이 닫힌 칸이면 카운트 증가\n          openedCount += 1;\n        }\n        tableData[row][cell] = count;\n      };\n      checkAround(action.row, action.cell);\n      let halted = false;\n      let result = '';\n      if (\n        state.data.row * state.data.cell - state.data.mine ===\n        state.openedCount + openedCount\n      ) {\n        // 승리\n        halted = true;\n        result = `${state.timer}초만에 승리하셨습니다`;\n      }\n      return {\n        ...state,\n        tableData,\n        openedCount: state.openedCount + openedCount,\n        halted,\n        result,\n      };\n    }\n    case CLICK_MINE: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      tableData[action.row][action.cell] = CODE.CLICKED_MINE;\n      return {\n        ...state,\n        tableData,\n        halted: true,\n      };\n    }\n    case FLAG_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.MINE) {\n        tableData[action.row][action.cell] = CODE.FLAG_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.FLAG;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case QUESTION_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.FLAG_MINE) {\n        tableData[action.row][action.cell] = CODE.QUESTION_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.QUESTION;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case NORMALIZE_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.QUESTION_MINE) {\n        tableData[action.row][action.cell] = CODE.MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.NORMAL;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case INCREMENT_TIMER: {\n      return {\n        ...state,\n        timer: state.timer + 1,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst MineSearch = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, halted, timer, result } = state;\n\n  const value = useMemo(\n    () => ({ tableData, halted, dispatch }),\n    [tableData, halted],\n  );\n\n  useEffect(() => {\n    let timer;\n    if (halted === false) {\n      timer = setInterval(() => {\n        dispatch({ type: INCREMENT_TIMER });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [halted]);\n\n  return (\n    <TableContext.Provider value={value}>\n      <div className=\"mine-search-container\">\n        <Form />\n        <div className=\"mine-search-timer\">{timer}</div>\n        <Table />\n        <div className=\"mine-search-result\">{result}</div>\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default MineSearch;\n"],"names":["getTdStyle","code","CODE","NORMAL","MINE","background","CLICKED_MINE","OPENED","QUESTION_MINE","QUESTION","FLAG_MINE","FLAG","getTdText","Td","memo","_ref","rowIndex","cellIndex","tableData","dispatch","halted","useContext","TableContext","cellData","onClickTd","useCallback","type","OPEN_CELL","row","cell","CLICK_MINE","onRightClickTd","e","preventDefault","FLAG_CELL","QUESTION_CELL","NORMALIZE_CELL","_jsx","RealTd","data","_ref2","style","onClick","onContextMenu","children","Array","length","fill","map","td","i","tr","Tr","Form","setRow","useState","setCell","mine","setMine","onChangeRow","target","value","onChangeCell","onChangeMine","onClickBtn","START_GAME","_jsxs","className","htmlFor","id","onChange","createContext","initialState","timer","result","openedCount","plantMine","candidate","arr","shuffle","chosen","splice","Math","floor","random","push","rowData","j","k","ver","hor","INCREMENT_TIMER","reducer","state","action","_objectSpread","forEach","checked","checkAround","includes","around","concat","count","filter","v","near","n","MineSearch","useReducer","useMemo","useEffect","setInterval","clearInterval","Provider","Table"],"sourceRoot":""}